@using Newtonsoft.Json
@using BehaviorsOfConcern.Web.Models
@model IncidentListViewModel
@{
    ViewBag.Title = "List";
}

<div class="row content">
    <div class="col-sm-10" style="margin-top: 5px;">
        <table id="incidentList" class="display" cellspacing="0" width="100%">
            <thead>
                <tr>
                    <th class="text-left" name="th-ID">ID</th>
                    <th class="text-left">Incident Date</th>
                    <th class="text-center">Student</th>
                    <th class="text-center">School</th>
                    <th class="text-left">Category</th>
                    <th class="text-left">Source</th>
                    <th class="text-left">Status</th>
                    <th class="text-center">Submitted  </th>
                </tr>
            </thead>
        </table>
        
        <form class="form-inline">
            <div class="form-group"><button type="button" class="btn btn-primary" data-redirectUrl="@Url.Action("Edit", "Incident")" id="openIncidentCommand">Open incident</button></div>
            <div class="form-group"><button type="button" class="btn btn-primary" data-toggle="modal" data-target="#newIncidentModal">Start a new incident</button></div>
        </form>


        <form class="form-horizontal" id="incidentReportForm" style="display: none; margin-top: 7px">
            <div class="well well-sm">
                <div class="row">
                    <div class="col-xs-2"><h4><b>Incident</b> #<span id="incidentID"></span></h4></div>
                    <div class="col-xs-5 text-left"><h4><b>Submitted By</b>&nbsp;&nbsp;<span id="submitter"></span></h4></div>
                    <div class="col-xs-5 text-right"><h4><b>On</b>&nbsp;&nbsp;<span id="submittedOn"></span>&nbsp;&nbsp;</h4></div>
                </div>
                <div class="form-group">
                    <label for="description" class="control-label col-sm-2">Description</label>
                    <div class="col-sm-10 form-control-static"><span id="description"></span></div>
                </div>
                <div class="form-group">
                    <label for="reportingSchool" class="control-label col-sm-2">Reporting School</label>
                    <div class="col-sm-4 form-control-static"><span id="reportingSchool"></span></div>
                    <label for="incidentDate" class="control-label col-sm-3">Date & Time of Incident</label>
                    <div class="col-sm-2 form-control-static"><span id="incidentDate"></span></div>
                </div>
            </div>
        </form>
    </div>

    <div class="col-sm-2 sidenav">@Html.Partial("IncidentFilters")</div>
</div>

<p id="debug" style="background-color:lightblue"></p>

@Html.Partial("NewIncidentModal", Model)
@section scripts{
    <script>
    var incidentCategoryLookups = @Html.Raw(JsonConvert.SerializeObject(Model.IncidentCategoryLookups.ToDictionary(luc => luc.Value.ToString(), luc => luc.Label)));
    var sourceLookups = @Html.Raw(JsonConvert.SerializeObject(Model.SourceLookups.ToDictionary(luc => luc.Value.ToString(), luc => luc.Label)));
    var statusLookups = @Html.Raw(JsonConvert.SerializeObject(Model.StatusLookups.ToDictionary(luc => luc.Value.ToString(), luc => luc.Label)));
    var outcomeLookups = @Html.Raw(JsonConvert.SerializeObject(Model.OutcomeLookups.ToDictionary(luc => luc.Value.ToString(), luc => luc.Label)));
    var recencyIntervalLookups = @Html.Raw(JsonConvert.SerializeObject(Model.RecencyIntervalLookups.ToDictionary(luc => luc.Value.ToString(), luc => luc.Label)));
    </script>
    @Scripts.Render("~/Scripts/boc-list.js")
}
